syntax = "proto3";

package calculator;
option go_package = "calculatorpb";

message Sum {
    float first_number = 1; // Number 1 as it is the first tag here
    float second_number = 2;
}

message SumRequest {
    Sum sum = 1;
}

message SumResponse {
    string result = 1;
}

message PrimeNumberDecomposition {
    int32 number = 1;
}

message PrimeNumberDecompositionRequest {
    PrimeNumberDecomposition primeNumberDecomposition = 1;
}

message PrimeNumberDecompositionResponse {
    int32 response = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    double result = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 number = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculatorService {
    // Unary API
    rpc Sum (SumRequest) returns (SumResponse) {
    }; // brackets for future options

    // Server Streaming API
    rpc DecomposePrimeNumber (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {
    }; // brackets for future options

    // Client Streaming API
    rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {
    };

    // BiDi Streaming API
    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {
    }

    // error handling
    // throws exception if sent number is negative
    // INVALID_TYPE argument
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {
    }

}
